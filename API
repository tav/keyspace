
Contact
=======

If you are experiencing difficulties please visit our Google Groups page:

- group home page:      http://groups.google.com/group/keyspace
- group email address:  keyspace@googlegroups.com

The official Keyspace homepage is at http://scalien.com


Keyspace Client Application Programming Interface (API)
=======================================================

It is a good idea to have a basic understanding of your
distributed system. Thus it is recommended that you read the
Keyspace whitepaper first. The whitepaper is at

http://scalien.com/whitepapers

Keyspace is a *master based* replicated database, where
certain operations are only serviced by the master node.
These operations are
- write operations
  (SET, TEST-AND-SET, ADD, DELETE, REMOVE, PRUNE and SUBMIT)
- safe read operations
  (GET, LIST-KEYS, LIST-KEYVALUES, COUNT)

The following operations are served by *all* nodes:
- who is the current master
  (GET-MASTER)
- dirty read operations
  (DIRTY-GET, DIRTY-LIST-KEYS, DIRTY-LIST-KEYVALUES, DIRTY-COUNT)

Dirty read operations will succeed on any server regardless of
internode connectivity, but may return inconsistent (not up-to-date)
data; hence the name dirty.

If your client wants to modify the database, it must be connected
to the master. On the other hand, if consistency does not matter
or your application logic guarantees it (eg. you stopped all writers),
you can connect to any node and perform dirty reads.


HTTP protocol
=============

You can issue all commands over HTTP with the GET method. The commands 
and responses are people-friendly, so you can issue them from your browser.
Be aware that HTTP should only be used for testing and peeking, as each 
command creates a new TCP/HTTP connection, which is fairly expensive and 
unnecessary. The programmatic APIs use the Keyspace protocol.

The syntax for HTTP commands is http://yoursever:port
where port is http.port specified in your conf file (default 8080).

If you look at the root http://yoursever:port Keyspace displays
its version number and master information.

The commands are:

/html/listkeys?prefix,startkey,count,next,forward
/html/listkeyvalues?prefix,startkey,count,next,forward
/html/dirtylistkeys?prefix,startkey,count,next,forward
/html/dirtylistkeyvalues?prefix,startkey,count,next,forward

and

/getmaster
/get?key
/dirtyget?key
/set?key,value
/testandset?key,test,value
/add?key,num
/rename?key,newKey
/delete?key
/remove?key
/prune?prefix
/listkeys?prefix,startkey,count,next,forward
/listkeyvalues?prefix,startkey,count,next,forward
/count?prefix,startkey,count,next,forward
/dirtylistkeys?prefix,startkey,count,next,forward
/dirtylistkeyvalues?prefix,startkey,count,next,forward
/dirtycount?prefix,startkey,count,next,forward

The commands starting with /html/ produce pretty-printed lists where the keys
are clickable links to the appropriate GET command.

For the list and count commands:
- the list returns keys starting with <prefix>
- listing starts with <prefix> + <startkey> (<startkey> is optional)
- return at most <count> elements (<count> is optional)
- if <next> is x, the first x elements are skipped (<next> is optional)
- if <forward> is not 'f', list backwards (<forward> is optional)

Keyspace protocol
=================

The Keyspace client protocol is what the programmatic API uses.

This part is unfinished. If you'd like to write a client library
for a new platform, please contact us and we'll push it to the
top of our priority queue.


Keyspace C API
==============

Building the C API from the Keyspace source tree:

	$ make clientlib
	
This will create the client library (libkeyspaceclient.a and .so)
in the 'bin' directory.

In order to compile your program with the Keyspace C API, you have
to add $KEYSPACE_SOURCE/Application/Keyspace/KeyspaceClient to the
include directory and include keyspace_client.h from your program.

For more information regarding the C API, see the file
keyspace_client.h file, which includes plenty of documentation.

For sample code, see Test/keyspace_client_test.c.


Python API
==========

We're working on it. If you'd like to use Keyspace from Python,
please contact us and we'll push it to the top of our priority queue.


PHP API
==========

We're working on it. If you'd like to use Keyspace from PHP,
please contact us and we'll push it to the top of our priority queue.


Java API
==========

We're working on it. If you'd like to use Keyspace from Java,
please contact us and we'll push it to the top of our priority queue.

